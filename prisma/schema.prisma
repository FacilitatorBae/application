// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["jsonProtocol"]
}

datasource db {
    provider          = "mysql"
    url               = env("DATABASE_URL")
    shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
    relationMode      = "prisma"
}

model Account {
    id                String  @id @default(uuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(uuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(uuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    createdAt     DateTime  @default(now())
    deletedAt     DateTime?
    displayName   String?
    firstName     String?
    lastName      String?
    password      String?
    updatedAt     DateTime  @updatedAt
    accounts      Account[]
    sessions      Session[]
}

model Product {
    id          Int       @id @default(autoincrement())
    owner       String    @default("Germ√°n Beder")
    title       String
    categoryId  Int
    description String?
    images      String?
    price       Int
    fee         Int
    isHot       Boolean
    isBusiness  Boolean
    isNew       Boolean
    createdAt   DateTime  @default(now())
    modifiedAt  DateTime  @updatedAt
    deletedAt   DateTime?
    category    Category  @relation(fields: [categoryId], references: [id])
}

model Category {
    id         Int       @id @default(autoincrement())
    name       String
    parent     String?
    createdAt  DateTime  @default(now())
    modifiedAt DateTime  @updatedAt
    deletedAt  DateTime?
    Product    Product[]
}
